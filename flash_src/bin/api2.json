{
    "events": {
        "like": {
            "url": "http://api.mail.ru/docs/reference/js/events-like/",
            "example": "mailru.events.listen(mailru.app.events.like, function(event) {\n   alert(event); // может быть liked, unliked \n});",
            "method": "mailru.app.events.like",
            "params": [],
            "callback": "eventsLikeCallback",
            "description": "Подпись на событие нажатия кнопки Нравится."
        }
    },
	"session": {
            "vid": {
                "url": "no url",
                "method": "mailru.session.vid",
                "params": "",
                "callback": "mailruSessionVidCallback",
                "description": "Получение ID текущего пользователя."
            }
	},
    "friends": {
        "invite": {
            "url": "http://api.mail.ru/docs/reference/js/friends-invite/",
            "example": "mailru.events.listen(mailru.app.events.friendsInvitation, function(event) {\n  // эта функция будет вызываться при закрытии диалога\n});\nmailru.app.friends.invite();",
            "parsedExample": [
                "mailru.app.friends.invite()"
            ],
            "method": "mailru.app.friends.invite",
            "event": "app.friendsInvitation",
            "description": "Показывает пользователю диалог приглашения друзей в приложение."
        },
        "add": {
            "url": "http://api.mail.ru/docs/reference/js/friends-add/",
            "example": "mailru.events.listen(mailru.common.events.friends.add, function(event) {\n  // эта функция будет вызываться при открытии и закрытии диалога\n});\nmailru.common.friends.add('15410773191172635989');",
            "parsedExample": [
                "mailru.common.friends.add('15410773191172635989')"
            ],
            "method": "mailru.common.friends.add",
            "event": "common.friends.add",
            "description": "Показывает пользователю диалог добавления в друзья."
        },
        "getAppUsers": {
            "url": "http://api.mail.ru/docs/reference/js/friends-getappusers/",
            "example": "mailru.common.friends.getAppUsers(function(list) {\n  alert(list[0]); // uid первого друга пользователя\n});",
            "parsedExample": [
                "mailru.common.friends.getAppUsers(function(list) {\n  updateStatus(list[0]); // uid первого друга пользователя\n});"
            ],
            "method": "mailru.common.friends.getAppUsers",
            "description": "Возвращает информацию о друзьях пользователя, установивших ваше приложение."
        },
        "getExtended": {
            "url": "http://api.mail.ru/docs/reference/js/friends-getextended/",
            "example": "mailru.common.friends.getExtended(function(list) {\n  alert(list[0].first_name); // имя первого друга пользователя\n});",
            "parsedExample": [
                "mailru.common.friends.getExtended(function(list) {\n  updateStatus(list[0].first_name); // имя первого друга пользователя\n});"
            ],
            "method": "mailru.common.friends.getExtended",
            "description": "Возвращает информацию о друзьях пользователя."
        },
        "getInvitationsCount": {
            "url": "http://api.mail.ru/docs/reference/js/friends-getinvitationscount-2/",
            "example": "mailru.common.friends.getInvitationsCount(function(invitations) {\n  alert(invitations.count); // количество приглашений\n});",
            "parsedExample": [
                "mailru.common.friends.getInvitationsCount(function(invitations) {\n  updateStatus(invitations.count); // количество приглашений\n});"
            ],
            "method": "mailru.common.friends.getInvitationsCount",
            "description": "Возвращает количество приглашений в друзья для указанного пользователя."
        },
        "request": {
            "url": "http://api.mail.ru/docs/reference/js/friends-request/",
            "example": "mailru.events.listen(mailru.app.events.friendsRequest, function(event) {\n  // эта функция будет вызываться при закрытии диалога\n});\nmailru.app.friends.request({\n   text: 'Помоги мне доить корову!',\n   image_url: 'http://content.foto.mail.ru/corp/martirosov/_cover/i-1187.jpg',\n   friends: ['123', '345'],\n   hash: '0123456789abcdef'\n});",
            "parsedExample": [
                "mailru.app.friends.request({   text: 'Помоги мне доить корову!',   image_url: 'http://content.foto.mail.ru/corp/martirosov/_cover/i-1187.jpg',   friends: ['123', '345'],   hash: '0123456789abcdef'})"
            ],
            "method": "mailru.app.friends.request",
            "params": {
				"text": "Помоги собрать арбузы!",
				"image_url": "http://content.foto.mail.ru/corp/martirosov/_cover/i-1187.jpg",
				"friends": ["123", "345"],
				"hash": "0123456789abcdef"
            },
            "event": "app.friendsRequest",
            "description": "Показывает пользователю диалог отправки запроса друзьям в приложение."
        }
    },
    "payments": {
        "showDialog": {
            "url": "http://api.mail.ru/docs/reference/js/payments-showdialog/",
            "example": "mailru.events.listen(mailru.app.events.paymentDialogStatus, function(event) {\n  // эта функция будет вызываться при открытии и закрытии диалога\n});\nmailru.events.listen(mailru.app.events.incomingPayment, function(event) {\n  // эта функция будет вызываться после совершения оплаты\n});\n \nmailru.app.payments.showDialog({\n  service_id: 1, \n  service_name: 'тестовый бриллиант', \n  mailiki_price: 1\n});",
            "parsedExample": [
                "mailru.app.payments.showDialog({  service_id: 1,   service_name: 'тестовый бриллиант',   mailiki_price: 1})"
            ],
            "method": "mailru.app.payments.showDialog",
            "params": {
				"service_id": "1",
				"service_name": "тестовый алмаз",
				"mailiki_price": "1"
            },
            "description": "Показывает пользователю диалог оплаты."
        }
    },
    "users": {
        "isAppUser": {
            "url": "http://api.mail.ru/docs/reference/js/users-isappuser/",
            "example": "mailru.app.users.isAppUser(function (res) {\n  alert(res.isAppUser); // установил ли текущий пользователь ваше приложение\n});",
            "parsedExample": [
                "mailru.app.users.isAppUser(function (res) {\n  updateStatus(res.isAppUser); // установил ли текущий пользователь ваше приложение\n});"
            ],
            "method": "mailru.app.users.isAppUser",
            "description": "Возвращает информацию о том, установил ли пользователь ваше приложение."
        },
        "requireInstallation": {
            "url": "http://api.mail.ru/docs/reference/js/users-requireinstallation/",
            "example": "mailru.events.listen(mailru.app.events.applicationInstallation, function(event) {\n  // эта функция будет вызываться при закрытии диалога\n});\nmailru.app.users.requireInstallation(['notification', 'widget']);",
            "parsedExample": [
                "mailru.app.users.requireInstallation(['notification', 'widget'])"
            ],
            "method": "mailru.app.users.requireInstallation",
            "params": {
				"notification": "widget"
            },
            "description": "Показывает пользователю диалог установки приложения."
        },
        "getBalance": {
            "url": "http://api.mail.ru/docs/reference/js/users-getbalance/",
            "example": "mailru.common.users.getBalance(function(data) {\n  alert(data.balance); // выведет баланс текущего (авторизованного) пользователя\n});",
            "parsedExample": [
                "mailru.common.users.getBalance(function(data) {\n  updateStatus(data.balance); // выведет баланс текущего (авторизованного) пользователя\n});"
            ],
            "method": "mailru.common.users.getBalance",
            "description": "Получение информации о балансе пользователя в мэйликах"
        },
        "getInfo": {
            "url": "http://api.mail.ru/docs/reference/js/users-getinfo/",
            "example": "mailru.common.users.getInfo(function(user_list) {\n  alert(user_list[0].first_name); // выведет имя пользователя с uid 123\n}, '123');",
            "parsedExample": [
                "mailru.common.users.getInfo(function(user_list) {\n  updateStatus(user_list[0].first_name); // выведет имя пользователя с uid 123\n}, '123');"
            ],
            "method": "mailru.common.users.getInfo",
            "description": "Возвращает информацию об одном или нескольких пользователях."
        },
        "hasAppPermission": {
            "url": "http://api.mail.ru/docs/reference/js/users-hasapppermission/",
            "example": "mailru.common.users.hasAppPermission(function(permissions) {\n  // выведет разрешена ли установка виджета\n  alert(permissions.widget ? 'есть' : 'нет');\n}, 'widget', 123);",
            "parsedExample": [
                "mailru.common.users.hasAppPermission(function(permissions) {\n  // выведет разрешена ли установка виджета\n  updateStatus(permissions.widget ? 'есть' : 'нет');\n}, 'widget', 123);"
            ],
            "method": "mailru.common.users.hasAppPermission",
            "description": "Возвращает информацию о наличии привилегии у пользователя."
        },
        "requirePermission": {
            "url": "http://api.mail.ru/docs/reference/js/users-requirepermission/",
            "example": "mailru.events.listen(mailru.common.events.permissionsChange, function(event) {\n  // эта функция будет вызываться при изменении привилегий приложения\n  alert(event.status);\n});\nmailru.common.users.requirePermission('widget');",
            "parsedExample": [
                "mailru.common.users.requirePermission('widget')"
            ],
            "method": "mailru.common.users.requirePermission",
            "params": "widget",
            "description": "Показывает пользователю диалог запроса привилегии."
        }
    },
    "utils": {
        "hash.read": {
            "url": "http://api.mail.ru/docs/reference/js/hash-read/",
            "example": "mailru.events.listen(mailru.app.events.readHash, function(result){\n  // для URL'а  http://my.mail.ru/apps/123#user_id=007&i_active_user=true\n  // result будет\n  // {\n  //  'user_id' : '007',\n  //  'is_active_user': 'true'\n  // }\n  alert(result);\n});\nmailru.app.utils.hash.read();",
            "parsedExample": [
                "mailru.app.utils.hash.read()"
            ],
            "method": "mailru.app.utils.hash.read",
            "description": "Получает значение хэша из URL приложения."
        },
        "hash.write": {
            "url": "http://api.mail.ru/docs/reference/js/hash-write/",
            "example": "mailru.app.utils.hash.write('user_id=007'); // можно передать как строку,\nmailru.app.utils.hash.write({user_id : 007}); // так и объект",
            "parsedExample": [
                "mailru.app.utils.hash.write('user_id=007')",
                "mailru.app.utils.hash.write({user_id : 007})"
            ],
            "method": "mailru.app.utils.hash.write",
            "params": "user_id=007",
            "description": "Записывает в URL приложения произвольный хэш."
        },
        "scrollTo": {
            "url": "http://api.mail.ru/docs/reference/js/utils-scrollto/",
            "example": "// установит скролл окна на 100 пикселей\nmailru.app.utils.scrollTo(100);\n \n// вызов без параметра - вернет значение скролла \nmailru.apputils.scrollTo()",
            "parsedExample": [
                "mailru.app.utils.scrollTo(100)",
                "mailru.apputils.scrollTo()"
            ],
            "method": "mailru.app.utils.scrollTo",
            "params": "100",
            "description": "Устанавливает либо возвращает высоту скролла окна с приложением."
        },
        "setHeight": {
            "url": "http://api.mail.ru/docs/reference/js/utils-setheight/",
            "example": "mailru.app.utils.setHeight(5000); //установит высоту iframe'a равную 5000 пикселей",
            "parsedExample": [
                "mailru.app.utils.setHeight(5000); //установит высоту iframe'a равную 5000 пикселей"
            ],
            "method": "mailru.app.utils.setHeight",
            "params": "3000",
            "description": "Устанавливает высоту iframe'a, в котором находится приложение."
        },
        "setTitle": {
            "url": "http://api.mail.ru/docs/reference/js/set-title/",
            "example": "mailru.app.utils.setTitle('Новое сообщение!');",
            "parsedExample": [
                "mailru.app.utils.setTitle('Новое сообщение!');"
            ],
            "method": "mailru.app.utils.setTitle",
            "params": "Новое сообщение!",
            "description": "Устанавливает заголовок окна браузера."
        }
    },
    "widget": {
        "set": {
            "url": "http://api.mail.ru/docs/reference/js/widget-set/",
            "example": "mailru.events.listen(mailru.app.events.widget.set, function(event) {\n// эта функция будет вызываться при закрытии диалога\n});\nmailru.app.widget.set({\nhtml: \"html-код виджета\"\n});",
            "parsedExample": [
                "mailru.app.widget.set({html: \"html-код виджета\"})"
            ],
            "method": "mailru.app.widget.set",
            "params": {
				"html": "<h1>HTML-код виджета</h1>"
            },
            "event": "app.widget.set",
            "description": "Публикует виджет приложения на профиле пользователя в «Моем мире»."
        }
    },
    "audio": {
        "get": {
            "url": "http://api.mail.ru/docs/reference/js/audio-get/",
            "example": "mailru.common.audio.get(function(list) {\n  alert(list[0].title); // название первой композиции из файлов пользователя\n});",
            "parsedExample": [
                "mailru.common.audio.get(function(list) {\n  updateStatus(list[0].title); // название первой композиции из файлов пользователя\n});"
            ],
            "method": "mailru.common.audio.get",
            "description": "Возвращает информацию о музыке пользователя."
        },
        "link": {
            "url": "http://api.mail.ru/docs/reference/js/audio-link/",
            "example": "mailru.common.audio.link(function(status) {\n  alert(status.linkAudio); // статус добавления аудиозаписи в плейлист\n});",
            "parsedExample": [
                "mailru.common.audio.link(function(status) {\n  updateStatus(status.linkAudio); // статус добавления аудиозаписи в плейлист\n});"
            ],
            "method": "mailru.common.audio.link",
            "params": {},
            "description": "Добавляет аудиозапись в плейлист пользователя."
        },
        "search": {
            "url": "http://api.mail.ru/docs/reference/js/audio-search/",
            "example": "mailru.common.audio.search(function(found) {\n  alert(found.total); // всего результатов найденных по запросу\n}, 'влад сташевский');",
            "parsedExample": [
                "mailru.common.audio.search(function(found) {\n  updateStatus(found.total); // всего результатов найденных по запросу\n}, 'влад сташевский');"
            ],
            "method": "mailru.common.audio.search",
            "params": {
				"query": "Света"
            },
            "event": "",
            "description": "Выполняет поиск по музыке в Моем Мире."
        }
    },
    "guestbook": {
        "post": {
            "url": "http://api.mail.ru/docs/reference/js/guestbook-post/",
            "example": "mailru.events.listen(mailru.common.events.guestbookPublish, function(event) {\n  // эта функция будет вызываться при закрытии диалога\n  alert(event.status);\n});\nmailru.common.guestbook.post({'title':'title', 'text': 'description'});",
            "parsedExample": [
                "mailru.common.guestbook.post({'title':'title', 'text': 'description'})"
            ],
            "method": "mailru.common.guestbook.post",
            "params": {
				"title": "This is Title!", 
				"text": "Description here now!"
            },
            "event": "common.guestbookPublish",
            "description": "Показывает пользователю диалог публикации записи в Гостевую книгу."
        }
    },
    "messages": {
        "send": {
            "url": "http://api.mail.ru/docs/reference/js/messages-send/",
            "example": "mailru.events.listen(mailru.common.events.message.send, function(event) {\n  alert(event.status);\n});\nmailru.common.messages.send({uid: '1234567'});",
            "parsedExample": [
                "mailru.common.messages.send({uid: '1234567'})"
            ],
            "method": "mailru.common.messages.send",
            "params": {
				"uid": "446142299"
            },
            "event": "common.message.send",
            "description": "Показывает пользователю диалог отправки личного сообщения."
        }
    },
    "photos": {
        "createAlbum": {
            "url": "http://api.mail.ru/docs/reference/js/photos-createalbum/",
            "example": "mailru.events.listen(mailru.common.events.createAlbum, function(event) {\n  // эта функция будет вызываться при действиях в диалоге\n  alert(event.status);\n});\nmailru.common.photos.createAlbum({'name': 'test'});",
            "parsedExample": [
                "mailru.common.photos.createAlbum({'name': 'test'})"
            ],
            "method": "mailru.common.photos.createAlbum",
            "params": {
				"name": "test"
            },
            "event": "common.createAlbum",
            "description": "Показывает пользователю диалог создания альбома."
        },
        "get": {
            "url": "http://api.mail.ru/docs/reference/js/photos-get/",
            "example": "mailru.common.photos.get(function(photos_list) {\n  // выведет название первой фотографии из альбома с aid 123\n  alert(photos_list[0].title); \n}, 123);",
            "method": "mailru.common.photos.get",
            "params": "_myphoto",
            "description": "Возвращает информацию о фотографиях пользователя."
        },
        "getAlbums": {
            "url": "http://api.mail.ru/docs/reference/js/photos-getalbums/",
            "example": "mailru.common.photos.getAlbums(function(albums_list) {\n  // выведет название первого альбома текущего пользователя\n  alert(albums_list[0].title); \n});",
            "method": "mailru.common.photos.getAlbums",
            "params": {},
            "description": "Возвращает информацию об альбомах текущего пользователя."
        },
        "upload": {
            "url": "http://api.mail.ru/docs/reference/js/photos-upload/",
            "example": "mailru.events.listen(mailru.common.events.upload, function(result){\n  alert(result.status);\n})\n \nmailru.common.photos.upload({ \n  url: 'http://www.sports.ru/images/object_19.1218129668.jpg', \n  aid: '_myphoto', \n  set_as_cover: true \n});",
            "method": "mailru.common.photos.upload",
            "params": {
				"url": "http://cs421726.vk.me/v421726265/5d51/vnxAbHosi0I.jpg",
				"aid": "_myphoto"
            },
            "event":"common.upload",
            "description": "Показывает пользователю диалог загрузки фотографии."
        },
        "uploadAvatar": {
            "url": "http://api.mail.ru/docs/reference/js/photos-uploadavatar/",
            "example": "mailru.events.listen(mailru.common.events.uploadAvatar, function(result){\n  alert(result.status);\n})\n \n// Загрузка по url и установка\nmailru.common.photos.uploadAvatar({ \n  url: 'http://www.sports.ru/images/object_19.1218129668.jpg'\n});\n \n// Установка по pid\nmailru.common.photos.uploadAvatar({ \n  pid: 2366\n});",
            "method": "mailru.common.photos.uploadAvatar",
            "params": {
				"url": "http://cs421726.vk.me/v421726265/5d51/vnxAbHosi0I.jpg"
            },
            "event":"common.uploadAvatar",
            "description": ""
        }
    },
    "stream": {
        "post": {
            "url": "http://api.mail.ru/docs/reference/js/stream-post/",
            "example": "mailru.events.listen(mailru.common.events.streamPublish, function(event) {\n  // эта функция будет вызываться при закрытии диалога\n  alert(event.status);\n});\nmailru.common.stream.post({'title':'title', 'text': 'description'});",
            "parsedExample": [
                "mailru.common.stream.post({'title':'title', 'text': 'description'})"
            ],
            "method": "mailru.common.stream.post",
            "params": {
				"title": "This is Title!", 
				"text": "Description Text here"
            },
            "callback": "mailruCommonStreamPostCallback",
            "event": "common.streamPublish",
            "description": "Показывает пользователю диалог добавления записи в «Что нового»."
        }
    }
}
